<Window x:Class="FollowFocusInterface.Views.ShellView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FollowFocusInterface.Views"
        xmlns:converters="clr-namespace:FollowFocusInterface.Converters"
        mc:Ignorable="d"
        WindowState="{Binding WindowState}"
        WindowStyle="None"
        Title="ShellView" Height="1080" Width="1240">
    
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="30"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibility"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="auto"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="30"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="5"></RowDefinition>
            <RowDefinition Height="30"></RowDefinition>
        </Grid.RowDefinitions>

        <!-- Window Control-->
        <Grid Grid.Row="0" Grid.ColumnSpan="5" Background="#466874">
            <Label Content="Follow Focus Interface" Margin="5 0" FontWeight="Bold" FontSize="13" Foreground="Gainsboro"/>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" WindowChrome.IsHitTestVisibleInChrome="True">
                <Button x:Name="MinimizeWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Minimize.png" Width="15"/>
                </Button>

                <ToggleButton x:Name="MaximizeWindow" Height="30" Width="30" Template="{DynamicResource UnMaksimize_Maximize_Button}">
                    <ToggleButton.Resources>
                        <DataTemplate x:Key="Unpressed">
                            <Image Source="Styles/Icons/Maksimize.png" Width="15"/>
                        </DataTemplate>
                        <DataTemplate x:Key="Pressed">
                            <Image Source="Styles/Icons/UnMaksimize.png" Width="15"/>
                        </DataTemplate>
                    </ToggleButton.Resources>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="ContentTemplate" Value="{StaticResource Unpressed}"/>
                            <Style.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="ContentTemplate" Value="{StaticResource Pressed}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Button x:Name="CloseWindow" Height="30" Width="30" Style="{DynamicResource WindowControllButtons}">
                    <Image Source="Styles/Icons/Close.png" Width="15"/>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Networking View-->
        <Grid Grid.Row="2" Grid.Column="1">
            <!-- USB Serial Port -->
            <Border Grid.Row="2" Grid.Column="1" BorderBrush="Black" BorderThickness="1" />
            <Grid Grid.Row="2" Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="5"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                </Grid.ColumnDefinitions>

                <!-- USB Serial Communication -->
                <ToggleButton Grid.Column="1" Grid.Row="1" Height="20" Width="155" VerticalAlignment="top" HorizontalAlignment="Left" IsChecked="True"
                          x:Name="ToggleVisibility_02" Panel.ZIndex="1" Style="{DynamicResource VisibilityToggleButton}"/>
                <GroupBox Grid.Column="1" Grid.Row="1" Header="USB Serial Communication" BorderThickness="1" BorderBrush="DimGray">
                    <Grid Grid.Row="1" Visibility="{Binding ElementName=ToggleVisibility_02, Path=IsChecked, Converter={StaticResource BoolToVisibility}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                        </Grid.ColumnDefinitions>

                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10 5">
                                <Button x:Name="USBSerialConnect" Content="{Binding USBConnectBtnText, FallbackValue='Open Port'}"
                                    Width="100" Style="{DynamicResource ButtonStyle1}"/>
                                <RadioButton Content="Status" HorizontalAlignment="Center"  IsChecked="{Binding USBSerialStatus}" IsEnabled="False"
                                         FlowDirection="RightToLeft" Margin="15 0 0 0" Style="{DynamicResource RadioButtonStyle1}" 
                                         VerticalAlignment="Center">
                                </RadioButton>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="10 5">
                                <TextBox x:Name="SerialInput" Width="414" Height="auto"  VerticalContentAlignment="Center" Margin="0 0 10 0"/>
                                <Button x:Name="SendSerial" Content="Send" Width="45" Style="{DynamicResource ButtonStyle1}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Slider x:Name="Slider" Value="{Binding SliderValue}" Width="370" Minimum="520" Maximum="2380" IsSnapToTickEnabled="True" TickFrequency="5" Margin="10 0 0 0" VerticalAlignment="Center"/>
                                <Label Content="Value:" VerticalAlignment="Center"></Label>
                                <TextBlock Text="{Binding SliderValue, StringFormat={}{0:0.#}}" Margin="10 0" Width="50" VerticalAlignment="Center"></TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="10">
                                <StackPanel >
                                    <Button Content="Add" x:Name="AddFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                    <Button Content="Insert" x:Name="InsertFocusTarget" Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                    <Button Content="Edit" x:Name="EditFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                    <Button Content="Remove" x:Name="RemoveFocusTarget"  Style="{DynamicResource ButtonStyle1}" Width="100"/>
                                </StackPanel>
                                <ListView  ItemsSource="{Binding FocusList}" SelectionMode="Single"
                                       MinHeight="50" MaxHeight="100" MinWidth="365"
                                       SelectedIndex="{Binding SelectedFocusTargetIdx}"
                                       SelectedItem="{Binding SelectedFocusTarget}" BorderBrush="#141414" BorderThickness="1">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="   " Height="20"/>
                                                <TextBox Text="{Binding Name}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18" Width="248"/>
                                                <TextBlock Text="   " Height="20"/>
                                                <TextBlock Text="{Binding Val, StringFormat={}{0:0.#}}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18" Width="30"/>
                                                <TextBlock Text="   " Height="20"/>
                                                <TextBox Text="{Binding Idx}" Foreground="#FFB4B4B4" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Height="18"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </GroupBox>
            </Grid>
        </Grid>

        <!--  Timeline controls -->
        <Grid Grid.Row="2" Grid.Column="3">
        </Grid>

        <!-- Status bar -->
        <Grid Grid.Row="5" Grid.ColumnSpan="5" Background="#466874" >
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Bottom" >
                    <Label Content="Socket status: " Foreground="Gainsboro" FontSize="10" ></Label>
                    <Label Content="{Binding ConnectionStatusStr}" Foreground="Gainsboro" FontSize="10"></Label>
                </StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
</Window>
